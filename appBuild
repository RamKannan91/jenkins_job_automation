package common
def antVersion = 'Ant 1.8.2'
def jdkVersion = 'JDK 1.7u25'
def recipientList = 'mparker@germaniainsurance.com,udokku@germaniainsurance.com'

def checkoutSVN(targetDir, repoURL) {
  checkout([$class: 'SubversionSCM', 
        locations: [[credentialsId: '9af7c2c1-b40c-47da-a713-c9fbe496c4a3', 
                     depthOption: 'infinity', 
                     quietOperation: true,
                     local: targetDir, 
                     remote: repoURL ]]])
}

def sendEmailNotification(emailSubject,emailBody) {
       // def content = '${JELLY_SCRIPT, template = "hhhhh"}'
        emailext(
                subject: emailSubject,
                to: "${recipientList}",
                recipientProviders: [[$class: 'CulpritsRecipientProvider']],
                mimeType: 'text/html',
                body: emailBody
        )
}

node() {
  stage ('Clean Workspace') { 
    deleteDir() 
  }

  stage("Code Checkout") {
    println("===== Checking Out ${env.PROJ_NAME} ======")
    checkoutSVN("${env.PROJ_NAME}/modules/configuration", "https://gsvnpapp1.germania-ins.com/svn/guidewire/InsuranceSuite/applications/branches/Release_${env.PROJ_VERSION}/${env.PROJ_NAME}/modules/configuration")
    println("===== Checking Out SuiteShared ======")
      checkoutSVN("ext_temp/${env.PROJ_NAME}/modules/configuration", "https://gsvnpapp1.germania-ins.com/svn/guidewire/InsuranceSuite/applications/branches/Release_${env.PROJ_VERSION}/SuiteShared/modules@HEAD")
  }

  stage("Build gw_update") {
    withAnt(installation: "${antVersion}", jdk: "${jdkVersion}") {
      withEnv( ["ANT_HOME=${tool antVersion}"] ) {
          sh "$ANT_HOME/bin/ant gw_update -f ${HUDSON_HOME}/buildfiles/${env.PROJ_NAME}/continuous-build.xml -DforceUnzip=true -Dbase.product.zip=${env.PROJ_NAME}805.zip -Dcustomer.workspace.home=${WORKSPACE}"
        }
      }
   }
   stage("Build regen_java_api") {  
    withAnt(installation: "${antVersion}", jdk: "${jdkVersion}") {
       withEnv( ["ANT_HOME=${tool antVersion}"] ) {
          sh "export ANT_OPTS='-Xmx1024m'"    
          sh "$ANT_HOME/bin/ant regen-java-api -f ${HUDSON_HOME}/buildfiles/${env.PROJ_NAME}/continuous-build.xml -Dcustomer.workspace.home=${WORKSPACE}"
        }
      }
   }
   stage("Build regen_soap_api") {
    withAnt(installation: "${antVersion}", jdk: "${jdkVersion}") {
        withEnv( ["ANT_HOME=${tool antVersion}"] ) {
            sh "$ANT_HOME/bin/ant verify-resources -f ${HUDSON_HOME}/buildfiles/${env.PROJ_NAME}/continuous-build.xml -Dcustomer.workspace.home=${WORKSPACE}"
        }
      }
   }
   stage("Build verify_resources") {
    withAnt(installation: "${antVersion}", jdk: "${jdkVersion}") {
        withEnv( ["ANT_HOME=${tool antVersion}"] ) {
            sh "$ANT_HOME/bin/ant verify-resources -f ${HUDSON_HOME}/buildfiles/${env.PROJ_NAME}/continuous-build.xml -Dcustomer.workspace.home=${WORKSPACE}"
        }
      }
   }
   stage("Build regenerateNewCheckSums") {
    withAnt(installation: "${antVersion}", jdk: "${jdkVersion}") {
        withEnv( ["ANT_HOME=${tool antVersion}"] ) {
            sh "$ANT_HOME/bin/ant regenerateNewCheckSums -f ${HUDSON_HOME}/buildfiles/${env.PROJ_NAME}/continuous-build.xml -Dcustomer.workspace.home=${WORKSPACE}"
        }
      }
   }
   stage("Build buildinfo") {
    withAnt(installation: "${antVersion}", jdk: "${jdkVersion}") {
        withEnv( ["ANT_HOME=${tool antVersion}"] ) {
            sh "$ANT_HOME/bin/ant buildinfo -f ${HUDSON_HOME}/buildfiles/${env.PROJ_NAME}/continuous-build.xml -Dcustomer.workspace.home=${WORKSPACE}"
        }
      }
   }
   stage("Build build_gw_ear") {
    withAnt(installation: "${antVersion}", jdk: "${jdkVersion}") {
        withEnv( ["ANT_HOME=${tool antVersion}"] ) {
            sh "$ANT_HOME/bin/ant build-gw-ear -f ${HUDSON_HOME}/buildfiles/${env.PROJ_NAME}/continuous-build.xml -Dcustomer.workspace.home=${WORKSPACE}"
        }
      }
   }
   stage("Build update_manifest") {
    withAnt(installation: "${antVersion}", jdk: "${jdkVersion}") {
        withEnv( ["ANT_HOME=${tool antVersion}"] ) {
            sh "$ANT_HOME/bin/ant update-manifest -f ${HUDSON_HOME}/buildfiles/${env.PROJ_NAME}/continuous-build.xml -Dcustomer.workspace.home=${WORKSPACE}"
        }
      }
   }

  stage("Archive Artifacts") {
    archiveArtifacts allowEmptyArchive: true, artifacts: "abc/dis/**/*.*", onlyIfSuccessful: true
  }

   stage('Send Email') {
    sendEmailNotification("Build ${env.JOB_NAME} - ${env.BUILD_STATUS} - [${env.BUILD_NUMBER}]","STARTED: Job ${env.JOB_NAME} [${env.BUILD_NUMBER}]: Check console output at - ${env.BUILD_URL}")
   }
}